{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchTerm","target","value","state","fetch","response","json","result","console","log","this","filteredList","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAGaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAAY,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJlDO,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACpC,OACI,uBAAOC,KAAK,SAASF,YAAaA,EAAaX,UAAU,SAASc,SAAUF,MCwCrEG,E,kDAvCb,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IAkBRa,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,SAlBpC,EAAKC,MAAQ,CACX,SAAW,GACXH,WAAY,IAJE,E,kMASOI,MAAM,8C,cAAvBC,E,gBACeA,EAASC,O,OAAxBC,E,OACNC,QAAQC,IAAIF,GACZG,KAAKX,SAAS,CACZ,SAAaQ,IAGfC,QAAQC,IAAIC,KAAKP,O,qIAOV,IAAD,EACyBO,KAAKP,MAA7Bb,EADD,EACCA,SAAUU,EADX,EACWA,WACXW,EAAerB,EAASsB,QAAO,SAAA5B,GAAO,OAAGA,EAAQG,KAAK0B,cAAcC,SAASd,MACnF,OACE,qBAAKlB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAcgB,KAAKhB,eAC3D,cAAC,EAAD,CAAUJ,SAAUqB,a,GAhCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3dfde673.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.styles.css\"\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name}/>\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./card-list.styles.css\"\r\nimport {Card} from \"../card/Card.component\"\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster)=> <Card key={monster.id} monster={monster}/>)}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>{\r\n    return (\r\n        <input type=\"search\" placeholder={placeholder} className=\"search\" onChange={handleChange} />\r\n    )\r\n}","import {Component} from \"react\"\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/searchbox/search-box.component\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      \"monsters\":[],\n      searchTerm: \"\"\n    }\n  }\n\n  async componentDidMount(){\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const result = await response.json();\n    console.log(result);\n    this.setState({\n      \"monsters\" : result\n    })\n\n    console.log(this.state);\n  }\n\n  handleChange = (e) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  render(){\n    const {monsters, searchTerm} = this.state;\n    const filteredList = monsters.filter(monster=> monster.name.toLowerCase().includes(searchTerm));\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Monster Rolodex</h1>\n          <SearchBox placeholder=\"search monters\" handleChange={this.handleChange}/>\n          <CardList monsters={filteredList}/>\n        </header>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}